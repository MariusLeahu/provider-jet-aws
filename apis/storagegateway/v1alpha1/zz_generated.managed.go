/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this StoragegatewayCache.
func (mg *StoragegatewayCache) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayCache.
func (mg *StoragegatewayCache) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayCache.
func (mg *StoragegatewayCache) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayCache.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayCache) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayCache.
func (mg *StoragegatewayCache) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayCache.
func (mg *StoragegatewayCache) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayCache.
func (mg *StoragegatewayCache) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayCache.
func (mg *StoragegatewayCache) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayCache.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayCache) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayCache.
func (mg *StoragegatewayCache) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayCachedIscsiVolume.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayCachedIscsiVolume) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayCachedIscsiVolume.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayCachedIscsiVolume) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayCachedIscsiVolume.
func (mg *StoragegatewayCachedIscsiVolume) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayFileSystemAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayFileSystemAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayFileSystemAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayFileSystemAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayFileSystemAssociation.
func (mg *StoragegatewayFileSystemAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayGateway.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayGateway) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayGateway.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayGateway) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayGateway.
func (mg *StoragegatewayGateway) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayNfsFileShare.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayNfsFileShare) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayNfsFileShare.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayNfsFileShare) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayNfsFileShare.
func (mg *StoragegatewayNfsFileShare) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewaySmbFileShare.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewaySmbFileShare) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewaySmbFileShare.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewaySmbFileShare) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewaySmbFileShare.
func (mg *StoragegatewaySmbFileShare) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayStoredIscsiVolume.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayStoredIscsiVolume) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayStoredIscsiVolume.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayStoredIscsiVolume) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayStoredIscsiVolume.
func (mg *StoragegatewayStoredIscsiVolume) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayTapePool.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayTapePool) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayTapePool.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayTapePool) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayTapePool.
func (mg *StoragegatewayTapePool) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayUploadBuffer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayUploadBuffer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayUploadBuffer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayUploadBuffer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayUploadBuffer.
func (mg *StoragegatewayUploadBuffer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StoragegatewayWorkingStorage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StoragegatewayWorkingStorage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StoragegatewayWorkingStorage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StoragegatewayWorkingStorage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StoragegatewayWorkingStorage.
func (mg *StoragegatewayWorkingStorage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
