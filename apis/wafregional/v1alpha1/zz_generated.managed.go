/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalByteMatchSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalByteMatchSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalByteMatchSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalByteMatchSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalByteMatchSet.
func (mg *WafregionalByteMatchSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalGeoMatchSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalGeoMatchSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalGeoMatchSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalGeoMatchSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalGeoMatchSet.
func (mg *WafregionalGeoMatchSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalIpset.
func (mg *WafregionalIpset) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalIpset.
func (mg *WafregionalIpset) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalIpset.
func (mg *WafregionalIpset) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalIpset.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalIpset) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalIpset.
func (mg *WafregionalIpset) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalIpset.
func (mg *WafregionalIpset) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalIpset.
func (mg *WafregionalIpset) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalIpset.
func (mg *WafregionalIpset) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalIpset.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalIpset) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalIpset.
func (mg *WafregionalIpset) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalRateBasedRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalRateBasedRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalRateBasedRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalRateBasedRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalRateBasedRule.
func (mg *WafregionalRateBasedRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalRegexMatchSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalRegexMatchSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalRegexMatchSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalRegexMatchSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalRegexMatchSet.
func (mg *WafregionalRegexMatchSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalRegexPatternSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalRegexPatternSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalRegexPatternSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalRegexPatternSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalRegexPatternSet.
func (mg *WafregionalRegexPatternSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalRule.
func (mg *WafregionalRule) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalRule.
func (mg *WafregionalRule) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalRule.
func (mg *WafregionalRule) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalRule) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalRule.
func (mg *WafregionalRule) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalRule.
func (mg *WafregionalRule) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalRule.
func (mg *WafregionalRule) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalRule.
func (mg *WafregionalRule) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalRule) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalRule.
func (mg *WafregionalRule) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalSizeConstraintSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalSizeConstraintSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalSizeConstraintSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalSizeConstraintSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalSizeConstraintSet.
func (mg *WafregionalSizeConstraintSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalSqlInjectionMatchSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalSqlInjectionMatchSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalSqlInjectionMatchSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalSqlInjectionMatchSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalSqlInjectionMatchSet.
func (mg *WafregionalSqlInjectionMatchSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalWebAcl.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalWebAcl) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalWebAcl.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalWebAcl) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalWebAcl.
func (mg *WafregionalWebAcl) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalWebAclAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalWebAclAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalWebAclAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalWebAclAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalWebAclAssociation.
func (mg *WafregionalWebAclAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this WafregionalXssMatchSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *WafregionalXssMatchSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this WafregionalXssMatchSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *WafregionalXssMatchSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this WafregionalXssMatchSet.
func (mg *WafregionalXssMatchSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
