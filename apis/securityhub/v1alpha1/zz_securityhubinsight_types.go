/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AwsAccountIDObservation struct {
}

type AwsAccountIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type CompanyNameObservation struct {
}

type CompanyNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ComplianceStatusObservation struct {
}

type ComplianceStatusParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ConfidenceObservation struct {
}

type ConfidenceParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type CreatedAtObservation struct {
}

type CreatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []DateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type CriticalityObservation struct {
}

type CriticalityParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type DateRangeObservation struct {
}

type DateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type DescriptionObservation struct {
}

type DescriptionParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type FiltersObservation struct {
}

type FiltersParameters struct {

	// +kubebuilder:validation:Optional
	AwsAccountID []AwsAccountIDParameters `json:"awsAccountId,omitempty" tf:"aws_account_id"`

	// +kubebuilder:validation:Optional
	CompanyName []CompanyNameParameters `json:"companyName,omitempty" tf:"company_name"`

	// +kubebuilder:validation:Optional
	ComplianceStatus []ComplianceStatusParameters `json:"complianceStatus,omitempty" tf:"compliance_status"`

	// +kubebuilder:validation:Optional
	Confidence []ConfidenceParameters `json:"confidence,omitempty" tf:"confidence"`

	// +kubebuilder:validation:Optional
	CreatedAt []CreatedAtParameters `json:"createdAt,omitempty" tf:"created_at"`

	// +kubebuilder:validation:Optional
	Criticality []CriticalityParameters `json:"criticality,omitempty" tf:"criticality"`

	// +kubebuilder:validation:Optional
	Description []DescriptionParameters `json:"description,omitempty" tf:"description"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsConfidence []FindingProviderFieldsConfidenceParameters `json:"findingProviderFieldsConfidence,omitempty" tf:"finding_provider_fields_confidence"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsCriticality []FindingProviderFieldsCriticalityParameters `json:"findingProviderFieldsCriticality,omitempty" tf:"finding_provider_fields_criticality"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsRelatedFindingsID []FindingProviderFieldsRelatedFindingsIDParameters `json:"findingProviderFieldsRelatedFindingsId,omitempty" tf:"finding_provider_fields_related_findings_id"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArnParameters `json:"findingProviderFieldsRelatedFindingsProductArn,omitempty" tf:"finding_provider_fields_related_findings_product_arn"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsSeverityLabel []FindingProviderFieldsSeverityLabelParameters `json:"findingProviderFieldsSeverityLabel,omitempty" tf:"finding_provider_fields_severity_label"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsSeverityOriginal []FindingProviderFieldsSeverityOriginalParameters `json:"findingProviderFieldsSeverityOriginal,omitempty" tf:"finding_provider_fields_severity_original"`

	// +kubebuilder:validation:Optional
	FindingProviderFieldsTypes []FindingProviderFieldsTypesParameters `json:"findingProviderFieldsTypes,omitempty" tf:"finding_provider_fields_types"`

	// +kubebuilder:validation:Optional
	FirstObservedAt []FirstObservedAtParameters `json:"firstObservedAt,omitempty" tf:"first_observed_at"`

	// +kubebuilder:validation:Optional
	GeneratorID []GeneratorIDParameters `json:"generatorId,omitempty" tf:"generator_id"`

	// +kubebuilder:validation:Optional
	ID []IDParameters `json:"id,omitempty" tf:"id"`

	// +kubebuilder:validation:Optional
	Keyword []KeywordParameters `json:"keyword,omitempty" tf:"keyword"`

	// +kubebuilder:validation:Optional
	LastObservedAt []LastObservedAtParameters `json:"lastObservedAt,omitempty" tf:"last_observed_at"`

	// +kubebuilder:validation:Optional
	MalwareName []MalwareNameParameters `json:"malwareName,omitempty" tf:"malware_name"`

	// +kubebuilder:validation:Optional
	MalwarePath []MalwarePathParameters `json:"malwarePath,omitempty" tf:"malware_path"`

	// +kubebuilder:validation:Optional
	MalwareState []MalwareStateParameters `json:"malwareState,omitempty" tf:"malware_state"`

	// +kubebuilder:validation:Optional
	MalwareType []MalwareTypeParameters `json:"malwareType,omitempty" tf:"malware_type"`

	// +kubebuilder:validation:Optional
	NetworkDestinationDomain []NetworkDestinationDomainParameters `json:"networkDestinationDomain,omitempty" tf:"network_destination_domain"`

	// +kubebuilder:validation:Optional
	NetworkDestinationIPv4 []NetworkDestinationIPv4Parameters `json:"networkDestinationIpv4,omitempty" tf:"network_destination_ipv4"`

	// +kubebuilder:validation:Optional
	NetworkDestinationIPv6 []NetworkDestinationIPv6Parameters `json:"networkDestinationIpv6,omitempty" tf:"network_destination_ipv6"`

	// +kubebuilder:validation:Optional
	NetworkDestinationPort []NetworkDestinationPortParameters `json:"networkDestinationPort,omitempty" tf:"network_destination_port"`

	// +kubebuilder:validation:Optional
	NetworkDirection []NetworkDirectionParameters `json:"networkDirection,omitempty" tf:"network_direction"`

	// +kubebuilder:validation:Optional
	NetworkProtocol []NetworkProtocolParameters `json:"networkProtocol,omitempty" tf:"network_protocol"`

	// +kubebuilder:validation:Optional
	NetworkSourceDomain []NetworkSourceDomainParameters `json:"networkSourceDomain,omitempty" tf:"network_source_domain"`

	// +kubebuilder:validation:Optional
	NetworkSourceIPv4 []NetworkSourceIPv4Parameters `json:"networkSourceIpv4,omitempty" tf:"network_source_ipv4"`

	// +kubebuilder:validation:Optional
	NetworkSourceIPv6 []NetworkSourceIPv6Parameters `json:"networkSourceIpv6,omitempty" tf:"network_source_ipv6"`

	// +kubebuilder:validation:Optional
	NetworkSourceMac []NetworkSourceMacParameters `json:"networkSourceMac,omitempty" tf:"network_source_mac"`

	// +kubebuilder:validation:Optional
	NetworkSourcePort []NetworkSourcePortParameters `json:"networkSourcePort,omitempty" tf:"network_source_port"`

	// +kubebuilder:validation:Optional
	NoteText []NoteTextParameters `json:"noteText,omitempty" tf:"note_text"`

	// +kubebuilder:validation:Optional
	NoteUpdatedAt []NoteUpdatedAtParameters `json:"noteUpdatedAt,omitempty" tf:"note_updated_at"`

	// +kubebuilder:validation:Optional
	NoteUpdatedBy []NoteUpdatedByParameters `json:"noteUpdatedBy,omitempty" tf:"note_updated_by"`

	// +kubebuilder:validation:Optional
	ProcessLaunchedAt []ProcessLaunchedAtParameters `json:"processLaunchedAt,omitempty" tf:"process_launched_at"`

	// +kubebuilder:validation:Optional
	ProcessName []ProcessNameParameters `json:"processName,omitempty" tf:"process_name"`

	// +kubebuilder:validation:Optional
	ProcessParentPid []ProcessParentPidParameters `json:"processParentPid,omitempty" tf:"process_parent_pid"`

	// +kubebuilder:validation:Optional
	ProcessPath []ProcessPathParameters `json:"processPath,omitempty" tf:"process_path"`

	// +kubebuilder:validation:Optional
	ProcessPid []ProcessPidParameters `json:"processPid,omitempty" tf:"process_pid"`

	// +kubebuilder:validation:Optional
	ProcessTerminatedAt []ProcessTerminatedAtParameters `json:"processTerminatedAt,omitempty" tf:"process_terminated_at"`

	// +kubebuilder:validation:Optional
	ProductArn []ProductArnParameters `json:"productArn,omitempty" tf:"product_arn"`

	// +kubebuilder:validation:Optional
	ProductFields []ProductFieldsParameters `json:"productFields,omitempty" tf:"product_fields"`

	// +kubebuilder:validation:Optional
	ProductName []ProductNameParameters `json:"productName,omitempty" tf:"product_name"`

	// +kubebuilder:validation:Optional
	RecommendationText []RecommendationTextParameters `json:"recommendationText,omitempty" tf:"recommendation_text"`

	// +kubebuilder:validation:Optional
	RecordState []RecordStateParameters `json:"recordState,omitempty" tf:"record_state"`

	// +kubebuilder:validation:Optional
	RelatedFindingsID []RelatedFindingsIDParameters `json:"relatedFindingsId,omitempty" tf:"related_findings_id"`

	// +kubebuilder:validation:Optional
	RelatedFindingsProductArn []RelatedFindingsProductArnParameters `json:"relatedFindingsProductArn,omitempty" tf:"related_findings_product_arn"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceIPv4Addresses []ResourceAwsEc2InstanceIPv4AddressesParameters `json:"resourceAwsEc2InstanceIpv4Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv4_addresses"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceIPv6Addresses []ResourceAwsEc2InstanceIPv6AddressesParameters `json:"resourceAwsEc2InstanceIpv6Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv6_addresses"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceIamInstanceProfileArn []ResourceAwsEc2InstanceIamInstanceProfileArnParameters `json:"resourceAwsEc2InstanceIamInstanceProfileArn,omitempty" tf:"resource_aws_ec2_instance_iam_instance_profile_arn"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceImageID []ResourceAwsEc2InstanceImageIDParameters `json:"resourceAwsEc2InstanceImageId,omitempty" tf:"resource_aws_ec2_instance_image_id"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceKeyName []ResourceAwsEc2InstanceKeyNameParameters `json:"resourceAwsEc2InstanceKeyName,omitempty" tf:"resource_aws_ec2_instance_key_name"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceLaunchedAt []ResourceAwsEc2InstanceLaunchedAtParameters `json:"resourceAwsEc2InstanceLaunchedAt,omitempty" tf:"resource_aws_ec2_instance_launched_at"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceSubnetID []ResourceAwsEc2InstanceSubnetIDParameters `json:"resourceAwsEc2InstanceSubnetId,omitempty" tf:"resource_aws_ec2_instance_subnet_id"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceType []ResourceAwsEc2InstanceTypeParameters `json:"resourceAwsEc2InstanceType,omitempty" tf:"resource_aws_ec2_instance_type"`

	// +kubebuilder:validation:Optional
	ResourceAwsEc2InstanceVpcID []ResourceAwsEc2InstanceVpcIDParameters `json:"resourceAwsEc2InstanceVpcId,omitempty" tf:"resource_aws_ec2_instance_vpc_id"`

	// +kubebuilder:validation:Optional
	ResourceAwsIamAccessKeyCreatedAt []ResourceAwsIamAccessKeyCreatedAtParameters `json:"resourceAwsIamAccessKeyCreatedAt,omitempty" tf:"resource_aws_iam_access_key_created_at"`

	// +kubebuilder:validation:Optional
	ResourceAwsIamAccessKeyStatus []ResourceAwsIamAccessKeyStatusParameters `json:"resourceAwsIamAccessKeyStatus,omitempty" tf:"resource_aws_iam_access_key_status"`

	// +kubebuilder:validation:Optional
	ResourceAwsIamAccessKeyUserName []ResourceAwsIamAccessKeyUserNameParameters `json:"resourceAwsIamAccessKeyUserName,omitempty" tf:"resource_aws_iam_access_key_user_name"`

	// +kubebuilder:validation:Optional
	ResourceAwsS3BucketOwnerID []ResourceAwsS3BucketOwnerIDParameters `json:"resourceAwsS3BucketOwnerId,omitempty" tf:"resource_aws_s3_bucket_owner_id"`

	// +kubebuilder:validation:Optional
	ResourceAwsS3BucketOwnerName []ResourceAwsS3BucketOwnerNameParameters `json:"resourceAwsS3BucketOwnerName,omitempty" tf:"resource_aws_s3_bucket_owner_name"`

	// +kubebuilder:validation:Optional
	ResourceContainerImageID []ResourceContainerImageIDParameters `json:"resourceContainerImageId,omitempty" tf:"resource_container_image_id"`

	// +kubebuilder:validation:Optional
	ResourceContainerImageName []ResourceContainerImageNameParameters `json:"resourceContainerImageName,omitempty" tf:"resource_container_image_name"`

	// +kubebuilder:validation:Optional
	ResourceContainerLaunchedAt []ResourceContainerLaunchedAtParameters `json:"resourceContainerLaunchedAt,omitempty" tf:"resource_container_launched_at"`

	// +kubebuilder:validation:Optional
	ResourceContainerName []ResourceContainerNameParameters `json:"resourceContainerName,omitempty" tf:"resource_container_name"`

	// +kubebuilder:validation:Optional
	ResourceDetailsOther []ResourceDetailsOtherParameters `json:"resourceDetailsOther,omitempty" tf:"resource_details_other"`

	// +kubebuilder:validation:Optional
	ResourceID []ResourceIDParameters `json:"resourceId,omitempty" tf:"resource_id"`

	// +kubebuilder:validation:Optional
	ResourcePartition []ResourcePartitionParameters `json:"resourcePartition,omitempty" tf:"resource_partition"`

	// +kubebuilder:validation:Optional
	ResourceRegion []ResourceRegionParameters `json:"resourceRegion,omitempty" tf:"resource_region"`

	// +kubebuilder:validation:Optional
	ResourceTags []ResourceTagsParameters `json:"resourceTags,omitempty" tf:"resource_tags"`

	// +kubebuilder:validation:Optional
	ResourceType []ResourceTypeParameters `json:"resourceType,omitempty" tf:"resource_type"`

	// +kubebuilder:validation:Optional
	SeverityLabel []SeverityLabelParameters `json:"severityLabel,omitempty" tf:"severity_label"`

	// +kubebuilder:validation:Optional
	SourceURL []SourceURLParameters `json:"sourceUrl,omitempty" tf:"source_url"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorCategory []ThreatIntelIndicatorCategoryParameters `json:"threatIntelIndicatorCategory,omitempty" tf:"threat_intel_indicator_category"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorLastObservedAt []ThreatIntelIndicatorLastObservedAtParameters `json:"threatIntelIndicatorLastObservedAt,omitempty" tf:"threat_intel_indicator_last_observed_at"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorSource []ThreatIntelIndicatorSourceParameters `json:"threatIntelIndicatorSource,omitempty" tf:"threat_intel_indicator_source"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorSourceURL []ThreatIntelIndicatorSourceURLParameters `json:"threatIntelIndicatorSourceUrl,omitempty" tf:"threat_intel_indicator_source_url"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorType []ThreatIntelIndicatorTypeParameters `json:"threatIntelIndicatorType,omitempty" tf:"threat_intel_indicator_type"`

	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorValue []ThreatIntelIndicatorValueParameters `json:"threatIntelIndicatorValue,omitempty" tf:"threat_intel_indicator_value"`

	// +kubebuilder:validation:Optional
	Title []TitleParameters `json:"title,omitempty" tf:"title"`

	// +kubebuilder:validation:Optional
	Type []TypeParameters `json:"type,omitempty" tf:"type"`

	// +kubebuilder:validation:Optional
	UpdatedAt []UpdatedAtParameters `json:"updatedAt,omitempty" tf:"updated_at"`

	// +kubebuilder:validation:Optional
	UserDefinedValues []UserDefinedValuesParameters `json:"userDefinedValues,omitempty" tf:"user_defined_values"`

	// +kubebuilder:validation:Optional
	VerificationState []VerificationStateParameters `json:"verificationState,omitempty" tf:"verification_state"`

	// +kubebuilder:validation:Optional
	WorkflowStatus []WorkflowStatusParameters `json:"workflowStatus,omitempty" tf:"workflow_status"`
}

type FindingProviderFieldsConfidenceObservation struct {
}

type FindingProviderFieldsConfidenceParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type FindingProviderFieldsCriticalityObservation struct {
}

type FindingProviderFieldsCriticalityParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type FindingProviderFieldsRelatedFindingsIDObservation struct {
}

type FindingProviderFieldsRelatedFindingsIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type FindingProviderFieldsRelatedFindingsProductArnObservation struct {
}

type FindingProviderFieldsRelatedFindingsProductArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type FindingProviderFieldsSeverityLabelObservation struct {
}

type FindingProviderFieldsSeverityLabelParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type FindingProviderFieldsSeverityOriginalObservation struct {
}

type FindingProviderFieldsSeverityOriginalParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type FindingProviderFieldsTypesObservation struct {
}

type FindingProviderFieldsTypesParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type FirstObservedAtDateRangeObservation struct {
}

type FirstObservedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type FirstObservedAtObservation struct {
}

type FirstObservedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []FirstObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type GeneratorIDObservation struct {
}

type GeneratorIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type IDObservation struct {
}

type IDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type KeywordObservation struct {
}

type KeywordParameters struct {

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type LastObservedAtDateRangeObservation struct {
}

type LastObservedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type LastObservedAtObservation struct {
}

type LastObservedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []LastObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type MalwareNameObservation struct {
}

type MalwareNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type MalwarePathObservation struct {
}

type MalwarePathParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type MalwareStateObservation struct {
}

type MalwareStateParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type MalwareTypeObservation struct {
}

type MalwareTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NetworkDestinationDomainObservation struct {
}

type NetworkDestinationDomainParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NetworkDestinationIPv4Observation struct {
}

type NetworkDestinationIPv4Parameters struct {

	// +kubebuilder:validation:Required
	Cidr string `json:"cidr" tf:"cidr"`
}

type NetworkDestinationIPv6Observation struct {
}

type NetworkDestinationIPv6Parameters struct {

	// +kubebuilder:validation:Required
	Cidr string `json:"cidr" tf:"cidr"`
}

type NetworkDestinationPortObservation struct {
}

type NetworkDestinationPortParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type NetworkDirectionObservation struct {
}

type NetworkDirectionParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NetworkProtocolObservation struct {
}

type NetworkProtocolParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NetworkSourceDomainObservation struct {
}

type NetworkSourceDomainParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NetworkSourceIPv4Observation struct {
}

type NetworkSourceIPv4Parameters struct {

	// +kubebuilder:validation:Required
	Cidr string `json:"cidr" tf:"cidr"`
}

type NetworkSourceIPv6Observation struct {
}

type NetworkSourceIPv6Parameters struct {

	// +kubebuilder:validation:Required
	Cidr string `json:"cidr" tf:"cidr"`
}

type NetworkSourceMacObservation struct {
}

type NetworkSourceMacParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NetworkSourcePortObservation struct {
}

type NetworkSourcePortParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type NoteTextObservation struct {
}

type NoteTextParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type NoteUpdatedAtDateRangeObservation struct {
}

type NoteUpdatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type NoteUpdatedAtObservation struct {
}

type NoteUpdatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []NoteUpdatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type NoteUpdatedByObservation struct {
}

type NoteUpdatedByParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ProcessLaunchedAtDateRangeObservation struct {
}

type ProcessLaunchedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type ProcessLaunchedAtObservation struct {
}

type ProcessLaunchedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ProcessLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type ProcessNameObservation struct {
}

type ProcessNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ProcessParentPidObservation struct {
}

type ProcessParentPidParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type ProcessPathObservation struct {
}

type ProcessPathParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ProcessPidObservation struct {
}

type ProcessPidParameters struct {

	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq"`

	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte"`

	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte"`
}

type ProcessTerminatedAtDateRangeObservation struct {
}

type ProcessTerminatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type ProcessTerminatedAtObservation struct {
}

type ProcessTerminatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ProcessTerminatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type ProductArnObservation struct {
}

type ProductArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ProductFieldsObservation struct {
}

type ProductFieldsParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ProductNameObservation struct {
}

type ProductNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type RecommendationTextObservation struct {
}

type RecommendationTextParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type RecordStateObservation struct {
}

type RecordStateParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type RelatedFindingsIDObservation struct {
}

type RelatedFindingsIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type RelatedFindingsProductArnObservation struct {
}

type RelatedFindingsProductArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceIPv4AddressesObservation struct {
}

type ResourceAwsEc2InstanceIPv4AddressesParameters struct {

	// +kubebuilder:validation:Required
	Cidr string `json:"cidr" tf:"cidr"`
}

type ResourceAwsEc2InstanceIPv6AddressesObservation struct {
}

type ResourceAwsEc2InstanceIPv6AddressesParameters struct {

	// +kubebuilder:validation:Required
	Cidr string `json:"cidr" tf:"cidr"`
}

type ResourceAwsEc2InstanceIamInstanceProfileArnObservation struct {
}

type ResourceAwsEc2InstanceIamInstanceProfileArnParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceImageIDObservation struct {
}

type ResourceAwsEc2InstanceImageIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceKeyNameObservation struct {
}

type ResourceAwsEc2InstanceKeyNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceLaunchedAtDateRangeObservation struct {
}

type ResourceAwsEc2InstanceLaunchedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceLaunchedAtObservation struct {
}

type ResourceAwsEc2InstanceLaunchedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ResourceAwsEc2InstanceLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type ResourceAwsEc2InstanceSubnetIDObservation struct {
}

type ResourceAwsEc2InstanceSubnetIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceTypeObservation struct {
}

type ResourceAwsEc2InstanceTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsEc2InstanceVpcIDObservation struct {
}

type ResourceAwsEc2InstanceVpcIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsIamAccessKeyCreatedAtDateRangeObservation struct {
}

type ResourceAwsIamAccessKeyCreatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type ResourceAwsIamAccessKeyCreatedAtObservation struct {
}

type ResourceAwsIamAccessKeyCreatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ResourceAwsIamAccessKeyCreatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type ResourceAwsIamAccessKeyStatusObservation struct {
}

type ResourceAwsIamAccessKeyStatusParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsIamAccessKeyUserNameObservation struct {
}

type ResourceAwsIamAccessKeyUserNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsS3BucketOwnerIDObservation struct {
}

type ResourceAwsS3BucketOwnerIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceAwsS3BucketOwnerNameObservation struct {
}

type ResourceAwsS3BucketOwnerNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceContainerImageIDObservation struct {
}

type ResourceContainerImageIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceContainerImageNameObservation struct {
}

type ResourceContainerImageNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceContainerLaunchedAtDateRangeObservation struct {
}

type ResourceContainerLaunchedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type ResourceContainerLaunchedAtObservation struct {
}

type ResourceContainerLaunchedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ResourceContainerLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type ResourceContainerNameObservation struct {
}

type ResourceContainerNameParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceDetailsOtherObservation struct {
}

type ResourceDetailsOtherParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceIDObservation struct {
}

type ResourceIDParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourcePartitionObservation struct {
}

type ResourcePartitionParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceRegionObservation struct {
}

type ResourceRegionParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceTagsObservation struct {
}

type ResourceTagsParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ResourceTypeObservation struct {
}

type ResourceTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type SecurityhubInsightObservation struct {
	Arn string `json:"arn" tf:"arn"`
}

type SecurityhubInsightParameters struct {

	// +kubebuilder:validation:Required
	Filters []FiltersParameters `json:"filters" tf:"filters"`

	// +kubebuilder:validation:Required
	GroupByAttribute string `json:"groupByAttribute" tf:"group_by_attribute"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region string `json:"region" tf:"-"`
}

type SeverityLabelObservation struct {
}

type SeverityLabelParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type SourceURLObservation struct {
}

type SourceURLParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ThreatIntelIndicatorCategoryObservation struct {
}

type ThreatIntelIndicatorCategoryParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ThreatIntelIndicatorLastObservedAtDateRangeObservation struct {
}

type ThreatIntelIndicatorLastObservedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type ThreatIntelIndicatorLastObservedAtObservation struct {
}

type ThreatIntelIndicatorLastObservedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []ThreatIntelIndicatorLastObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type ThreatIntelIndicatorSourceObservation struct {
}

type ThreatIntelIndicatorSourceParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ThreatIntelIndicatorSourceURLObservation struct {
}

type ThreatIntelIndicatorSourceURLParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ThreatIntelIndicatorTypeObservation struct {
}

type ThreatIntelIndicatorTypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type ThreatIntelIndicatorValueObservation struct {
}

type ThreatIntelIndicatorValueParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type TitleObservation struct {
}

type TitleParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type TypeObservation struct {
}

type TypeParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type UpdatedAtDateRangeObservation struct {
}

type UpdatedAtDateRangeParameters struct {

	// +kubebuilder:validation:Required
	Unit string `json:"unit" tf:"unit"`

	// +kubebuilder:validation:Required
	Value int64 `json:"value" tf:"value"`
}

type UpdatedAtObservation struct {
}

type UpdatedAtParameters struct {

	// +kubebuilder:validation:Optional
	DateRange []UpdatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range"`

	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end"`

	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start"`
}

type UserDefinedValuesObservation struct {
}

type UserDefinedValuesParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type VerificationStateObservation struct {
}

type VerificationStateParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type WorkflowStatusObservation struct {
}

type WorkflowStatusParameters struct {

	// +kubebuilder:validation:Required
	Comparison string `json:"comparison" tf:"comparison"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

// SecurityhubInsightSpec defines the desired state of SecurityhubInsight
type SecurityhubInsightSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SecurityhubInsightParameters `json:"forProvider"`
}

// SecurityhubInsightStatus defines the observed state of SecurityhubInsight.
type SecurityhubInsightStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SecurityhubInsightObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityhubInsight is the Schema for the SecurityhubInsights API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type SecurityhubInsight struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityhubInsightSpec   `json:"spec"`
	Status            SecurityhubInsightStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityhubInsightList contains a list of SecurityhubInsights
type SecurityhubInsightList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityhubInsight `json:"items"`
}

// Repository type metadata.
var (
	SecurityhubInsightKind             = "SecurityhubInsight"
	SecurityhubInsightGroupKind        = schema.GroupKind{Group: Group, Kind: SecurityhubInsightKind}.String()
	SecurityhubInsightKindAPIVersion   = SecurityhubInsightKind + "." + GroupVersion.String()
	SecurityhubInsightGroupVersionKind = GroupVersion.WithKind(SecurityhubInsightKind)
)

func init() {
	SchemeBuilder.Register(&SecurityhubInsight{}, &SecurityhubInsightList{})
}
