/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type DmsReplicationTaskObservation struct {
	ReplicationTaskArn string `json:"replicationTaskArn" tf:"replication_task_arn"`
}

type DmsReplicationTaskParameters struct {

	// +kubebuilder:validation:Optional
	CdcStartTime *string `json:"cdcStartTime,omitempty" tf:"cdc_start_time"`

	// +kubebuilder:validation:Required
	MigrationType string `json:"migrationType" tf:"migration_type"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	ReplicationInstanceArn string `json:"replicationInstanceArn" tf:"replication_instance_arn"`

	// +kubebuilder:validation:Required
	ReplicationTaskID string `json:"replicationTaskId" tf:"replication_task_id"`

	// +kubebuilder:validation:Optional
	ReplicationTaskSettings *string `json:"replicationTaskSettings,omitempty" tf:"replication_task_settings"`

	// +kubebuilder:validation:Required
	SourceEndpointArn string `json:"sourceEndpointArn" tf:"source_endpoint_arn"`

	// +kubebuilder:validation:Required
	TableMappings string `json:"tableMappings" tf:"table_mappings"`

	// +kubebuilder:validation:Optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`

	// +kubebuilder:validation:Optional
	TagsAll map[string]string `json:"tagsAll,omitempty" tf:"tags_all"`

	// +kubebuilder:validation:Required
	TargetEndpointArn string `json:"targetEndpointArn" tf:"target_endpoint_arn"`
}

// DmsReplicationTaskSpec defines the desired state of DmsReplicationTask
type DmsReplicationTaskSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       DmsReplicationTaskParameters `json:"forProvider"`
}

// DmsReplicationTaskStatus defines the observed state of DmsReplicationTask.
type DmsReplicationTaskStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          DmsReplicationTaskObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DmsReplicationTask is the Schema for the DmsReplicationTasks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type DmsReplicationTask struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DmsReplicationTaskSpec   `json:"spec"`
	Status            DmsReplicationTaskStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DmsReplicationTaskList contains a list of DmsReplicationTasks
type DmsReplicationTaskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DmsReplicationTask `json:"items"`
}

// Repository type metadata.
var (
	DmsReplicationTaskKind             = "DmsReplicationTask"
	DmsReplicationTaskGroupKind        = schema.GroupKind{Group: Group, Kind: DmsReplicationTaskKind}.String()
	DmsReplicationTaskKindAPIVersion   = DmsReplicationTaskKind + "." + GroupVersion.String()
	DmsReplicationTaskGroupVersionKind = GroupVersion.WithKind(DmsReplicationTaskKind)
)

func init() {
	SchemeBuilder.Register(&DmsReplicationTask{}, &DmsReplicationTaskList{})
}
