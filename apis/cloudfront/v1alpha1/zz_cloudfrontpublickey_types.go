/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type CloudfrontPublicKeyObservation struct {
	CallerReference string `json:"callerReference" tf:"caller_reference"`

	Etag string `json:"etag" tf:"etag"`
}

type CloudfrontPublicKeyParameters struct {

	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment"`

	// +kubebuilder:validation:Required
	EncodedKey string `json:"encodedKey" tf:"encoded_key"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// +kubebuilder:validation:Optional
	NamePrefix *string `json:"namePrefix,omitempty" tf:"name_prefix"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region string `json:"region" tf:"-"`
}

// CloudfrontPublicKeySpec defines the desired state of CloudfrontPublicKey
type CloudfrontPublicKeySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       CloudfrontPublicKeyParameters `json:"forProvider"`
}

// CloudfrontPublicKeyStatus defines the observed state of CloudfrontPublicKey.
type CloudfrontPublicKeyStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          CloudfrontPublicKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CloudfrontPublicKey is the Schema for the CloudfrontPublicKeys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type CloudfrontPublicKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CloudfrontPublicKeySpec   `json:"spec"`
	Status            CloudfrontPublicKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudfrontPublicKeyList contains a list of CloudfrontPublicKeys
type CloudfrontPublicKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudfrontPublicKey `json:"items"`
}

// Repository type metadata.
var (
	CloudfrontPublicKeyKind             = "CloudfrontPublicKey"
	CloudfrontPublicKeyGroupKind        = schema.GroupKind{Group: Group, Kind: CloudfrontPublicKeyKind}.String()
	CloudfrontPublicKeyKindAPIVersion   = CloudfrontPublicKeyKind + "." + GroupVersion.String()
	CloudfrontPublicKeyGroupVersionKind = GroupVersion.WithKind(CloudfrontPublicKeyKind)
)

func init() {
	SchemeBuilder.Register(&CloudfrontPublicKey{}, &CloudfrontPublicKeyList{})
}
