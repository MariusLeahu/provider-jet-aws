/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApprunnerAutoScalingConfigurationVersion.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApprunnerAutoScalingConfigurationVersion) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApprunnerAutoScalingConfigurationVersion.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApprunnerAutoScalingConfigurationVersion) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApprunnerAutoScalingConfigurationVersion.
func (mg *ApprunnerAutoScalingConfigurationVersion) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApprunnerConnection.
func (mg *ApprunnerConnection) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApprunnerConnection.
func (mg *ApprunnerConnection) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApprunnerConnection.
func (mg *ApprunnerConnection) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApprunnerConnection.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApprunnerConnection) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApprunnerConnection.
func (mg *ApprunnerConnection) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApprunnerConnection.
func (mg *ApprunnerConnection) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApprunnerConnection.
func (mg *ApprunnerConnection) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApprunnerConnection.
func (mg *ApprunnerConnection) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApprunnerConnection.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApprunnerConnection) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApprunnerConnection.
func (mg *ApprunnerConnection) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApprunnerCustomDomainAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApprunnerCustomDomainAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApprunnerCustomDomainAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApprunnerCustomDomainAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApprunnerCustomDomainAssociation.
func (mg *ApprunnerCustomDomainAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApprunnerService.
func (mg *ApprunnerService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApprunnerService.
func (mg *ApprunnerService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApprunnerService.
func (mg *ApprunnerService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApprunnerService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApprunnerService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApprunnerService.
func (mg *ApprunnerService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApprunnerService.
func (mg *ApprunnerService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApprunnerService.
func (mg *ApprunnerService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApprunnerService.
func (mg *ApprunnerService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApprunnerService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApprunnerService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApprunnerService.
func (mg *ApprunnerService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
