/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AppautoscalingPolicyObservation struct {
	Arn string `json:"arn" tf:"arn"`
}

type AppautoscalingPolicyParameters struct {

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Optional
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	ResourceID string `json:"resourceId" tf:"resource_id"`

	// +kubebuilder:validation:Required
	ScalableDimension string `json:"scalableDimension" tf:"scalable_dimension"`

	// +kubebuilder:validation:Required
	ServiceNamespace string `json:"serviceNamespace" tf:"service_namespace"`

	// +kubebuilder:validation:Optional
	StepScalingPolicyConfiguration []StepScalingPolicyConfigurationParameters `json:"stepScalingPolicyConfiguration,omitempty" tf:"step_scaling_policy_configuration"`

	// +kubebuilder:validation:Optional
	TargetTrackingScalingPolicyConfiguration []TargetTrackingScalingPolicyConfigurationParameters `json:"targetTrackingScalingPolicyConfiguration,omitempty" tf:"target_tracking_scaling_policy_configuration"`
}

type CustomizedMetricSpecificationObservation struct {
}

type CustomizedMetricSpecificationParameters struct {

	// +kubebuilder:validation:Optional
	Dimensions []DimensionsParameters `json:"dimensions,omitempty" tf:"dimensions"`

	// +kubebuilder:validation:Required
	MetricName string `json:"metricName" tf:"metric_name"`

	// +kubebuilder:validation:Required
	Namespace string `json:"namespace" tf:"namespace"`

	// +kubebuilder:validation:Required
	Statistic string `json:"statistic" tf:"statistic"`

	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type DimensionsObservation struct {
}

type DimensionsParameters struct {

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type PredefinedMetricSpecificationObservation struct {
}

type PredefinedMetricSpecificationParameters struct {

	// +kubebuilder:validation:Required
	PredefinedMetricType string `json:"predefinedMetricType" tf:"predefined_metric_type"`

	// +kubebuilder:validation:Optional
	ResourceLabel *string `json:"resourceLabel,omitempty" tf:"resource_label"`
}

type StepAdjustmentObservation struct {
}

type StepAdjustmentParameters struct {

	// +kubebuilder:validation:Optional
	MetricIntervalLowerBound *string `json:"metricIntervalLowerBound,omitempty" tf:"metric_interval_lower_bound"`

	// +kubebuilder:validation:Optional
	MetricIntervalUpperBound *string `json:"metricIntervalUpperBound,omitempty" tf:"metric_interval_upper_bound"`

	// +kubebuilder:validation:Required
	ScalingAdjustment int64 `json:"scalingAdjustment" tf:"scaling_adjustment"`
}

type StepScalingPolicyConfigurationObservation struct {
}

type StepScalingPolicyConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	AdjustmentType *string `json:"adjustmentType,omitempty" tf:"adjustment_type"`

	// +kubebuilder:validation:Optional
	Cooldown *int64 `json:"cooldown,omitempty" tf:"cooldown"`

	// +kubebuilder:validation:Optional
	MetricAggregationType *string `json:"metricAggregationType,omitempty" tf:"metric_aggregation_type"`

	// +kubebuilder:validation:Optional
	MinAdjustmentMagnitude *int64 `json:"minAdjustmentMagnitude,omitempty" tf:"min_adjustment_magnitude"`

	// +kubebuilder:validation:Optional
	StepAdjustment []StepAdjustmentParameters `json:"stepAdjustment,omitempty" tf:"step_adjustment"`
}

type TargetTrackingScalingPolicyConfigurationObservation struct {
}

type TargetTrackingScalingPolicyConfigurationParameters struct {

	// +kubebuilder:validation:Optional
	CustomizedMetricSpecification []CustomizedMetricSpecificationParameters `json:"customizedMetricSpecification,omitempty" tf:"customized_metric_specification"`

	// +kubebuilder:validation:Optional
	DisableScaleIn *bool `json:"disableScaleIn,omitempty" tf:"disable_scale_in"`

	// +kubebuilder:validation:Optional
	PredefinedMetricSpecification []PredefinedMetricSpecificationParameters `json:"predefinedMetricSpecification,omitempty" tf:"predefined_metric_specification"`

	// +kubebuilder:validation:Optional
	ScaleInCooldown *int64 `json:"scaleInCooldown,omitempty" tf:"scale_in_cooldown"`

	// +kubebuilder:validation:Optional
	ScaleOutCooldown *int64 `json:"scaleOutCooldown,omitempty" tf:"scale_out_cooldown"`

	// +kubebuilder:validation:Required
	TargetValue float64 `json:"targetValue" tf:"target_value"`
}

// AppautoscalingPolicySpec defines the desired state of AppautoscalingPolicy
type AppautoscalingPolicySpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AppautoscalingPolicyParameters `json:"forProvider"`
}

// AppautoscalingPolicyStatus defines the observed state of AppautoscalingPolicy.
type AppautoscalingPolicyStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AppautoscalingPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppautoscalingPolicy is the Schema for the AppautoscalingPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tfaws}
type AppautoscalingPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppautoscalingPolicySpec   `json:"spec"`
	Status            AppautoscalingPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppautoscalingPolicyList contains a list of AppautoscalingPolicys
type AppautoscalingPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppautoscalingPolicy `json:"items"`
}

// Repository type metadata.
var (
	AppautoscalingPolicyKind             = "AppautoscalingPolicy"
	AppautoscalingPolicyGroupKind        = schema.GroupKind{Group: Group, Kind: AppautoscalingPolicyKind}.String()
	AppautoscalingPolicyKindAPIVersion   = AppautoscalingPolicyKind + "." + GroupVersion.String()
	AppautoscalingPolicyGroupVersionKind = GroupVersion.WithKind(AppautoscalingPolicyKind)
)

func init() {
	SchemeBuilder.Register(&AppautoscalingPolicy{}, &AppautoscalingPolicyList{})
}
