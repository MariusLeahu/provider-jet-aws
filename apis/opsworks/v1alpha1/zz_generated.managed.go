/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this OpsworksApplication.
func (mg *OpsworksApplication) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksApplication.
func (mg *OpsworksApplication) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksApplication.
func (mg *OpsworksApplication) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksApplication.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksApplication) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksApplication.
func (mg *OpsworksApplication) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksApplication.
func (mg *OpsworksApplication) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksApplication.
func (mg *OpsworksApplication) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksApplication.
func (mg *OpsworksApplication) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksApplication.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksApplication) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksApplication.
func (mg *OpsworksApplication) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksCustomLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksCustomLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksCustomLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksCustomLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksCustomLayer.
func (mg *OpsworksCustomLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksGangliaLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksGangliaLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksGangliaLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksGangliaLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksGangliaLayer.
func (mg *OpsworksGangliaLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksHaproxyLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksHaproxyLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksHaproxyLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksHaproxyLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksHaproxyLayer.
func (mg *OpsworksHaproxyLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksInstance.
func (mg *OpsworksInstance) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksInstance.
func (mg *OpsworksInstance) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksInstance.
func (mg *OpsworksInstance) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksInstance.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksInstance) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksInstance.
func (mg *OpsworksInstance) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksInstance.
func (mg *OpsworksInstance) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksInstance.
func (mg *OpsworksInstance) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksInstance.
func (mg *OpsworksInstance) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksInstance.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksInstance) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksInstance.
func (mg *OpsworksInstance) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksJavaAppLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksJavaAppLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksJavaAppLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksJavaAppLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksJavaAppLayer.
func (mg *OpsworksJavaAppLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksMemcachedLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksMemcachedLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksMemcachedLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksMemcachedLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksMemcachedLayer.
func (mg *OpsworksMemcachedLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksMysqlLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksMysqlLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksMysqlLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksMysqlLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksMysqlLayer.
func (mg *OpsworksMysqlLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksNodejsAppLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksNodejsAppLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksNodejsAppLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksNodejsAppLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksNodejsAppLayer.
func (mg *OpsworksNodejsAppLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksPermission.
func (mg *OpsworksPermission) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksPermission.
func (mg *OpsworksPermission) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksPermission.
func (mg *OpsworksPermission) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksPermission.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksPermission) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksPermission.
func (mg *OpsworksPermission) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksPermission.
func (mg *OpsworksPermission) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksPermission.
func (mg *OpsworksPermission) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksPermission.
func (mg *OpsworksPermission) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksPermission.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksPermission) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksPermission.
func (mg *OpsworksPermission) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksPhpAppLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksPhpAppLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksPhpAppLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksPhpAppLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksPhpAppLayer.
func (mg *OpsworksPhpAppLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksRailsAppLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksRailsAppLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksRailsAppLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksRailsAppLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksRailsAppLayer.
func (mg *OpsworksRailsAppLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksRdsDbInstance.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksRdsDbInstance) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksRdsDbInstance.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksRdsDbInstance) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksRdsDbInstance.
func (mg *OpsworksRdsDbInstance) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksStack.
func (mg *OpsworksStack) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksStack.
func (mg *OpsworksStack) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksStack.
func (mg *OpsworksStack) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksStack.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksStack) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksStack.
func (mg *OpsworksStack) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksStack.
func (mg *OpsworksStack) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksStack.
func (mg *OpsworksStack) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksStack.
func (mg *OpsworksStack) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksStack.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksStack) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksStack.
func (mg *OpsworksStack) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksStaticWebLayer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksStaticWebLayer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksStaticWebLayer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksStaticWebLayer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksStaticWebLayer.
func (mg *OpsworksStaticWebLayer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OpsworksUserProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OpsworksUserProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OpsworksUserProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OpsworksUserProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OpsworksUserProfile.
func (mg *OpsworksUserProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
