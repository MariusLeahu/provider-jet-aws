/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoadminAccountAssignment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoadminAccountAssignment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoadminAccountAssignment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoadminAccountAssignment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoadminAccountAssignment.
func (mg *SsoadminAccountAssignment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoadminManagedPolicyAttachment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoadminManagedPolicyAttachment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoadminManagedPolicyAttachment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoadminManagedPolicyAttachment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoadminManagedPolicyAttachment.
func (mg *SsoadminManagedPolicyAttachment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoadminPermissionSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoadminPermissionSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoadminPermissionSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoadminPermissionSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoadminPermissionSet.
func (mg *SsoadminPermissionSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoadminPermissionSetInlinePolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoadminPermissionSetInlinePolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoadminPermissionSetInlinePolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoadminPermissionSetInlinePolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoadminPermissionSetInlinePolicy.
func (mg *SsoadminPermissionSetInlinePolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
