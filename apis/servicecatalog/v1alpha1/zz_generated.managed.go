/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogBudgetResourceAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogBudgetResourceAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogBudgetResourceAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogBudgetResourceAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogBudgetResourceAssociation.
func (mg *ServicecatalogBudgetResourceAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogConstraint.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogConstraint) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogConstraint.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogConstraint) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogConstraint.
func (mg *ServicecatalogConstraint) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogOrganizationsAccess.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogOrganizationsAccess) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogOrganizationsAccess.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogOrganizationsAccess) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogOrganizationsAccess.
func (mg *ServicecatalogOrganizationsAccess) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogPortfolio.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogPortfolio) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogPortfolio.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogPortfolio) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogPortfolio.
func (mg *ServicecatalogPortfolio) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogPortfolioShare.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogPortfolioShare) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogPortfolioShare.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogPortfolioShare) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogPortfolioShare.
func (mg *ServicecatalogPortfolioShare) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogPrincipalPortfolioAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogPrincipalPortfolioAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogPrincipalPortfolioAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogPrincipalPortfolioAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogPrincipalPortfolioAssociation.
func (mg *ServicecatalogPrincipalPortfolioAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogProduct.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogProduct) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogProduct.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogProduct) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogProduct.
func (mg *ServicecatalogProduct) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogProductPortfolioAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogProductPortfolioAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogProductPortfolioAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogProductPortfolioAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogProductPortfolioAssociation.
func (mg *ServicecatalogProductPortfolioAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogProvisionedProduct.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogProvisionedProduct) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogProvisionedProduct.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogProvisionedProduct) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogProvisionedProduct.
func (mg *ServicecatalogProvisionedProduct) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogProvisioningArtifact.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogProvisioningArtifact) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogProvisioningArtifact.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogProvisioningArtifact) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogProvisioningArtifact.
func (mg *ServicecatalogProvisioningArtifact) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogServiceAction.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogServiceAction) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogServiceAction.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogServiceAction) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogServiceAction.
func (mg *ServicecatalogServiceAction) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogTagOption.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogTagOption) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogTagOption.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogTagOption) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogTagOption.
func (mg *ServicecatalogTagOption) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ServicecatalogTagOptionResourceAssociation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ServicecatalogTagOptionResourceAssociation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ServicecatalogTagOptionResourceAssociation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ServicecatalogTagOptionResourceAssociation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ServicecatalogTagOptionResourceAssociation.
func (mg *ServicecatalogTagOptionResourceAssociation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
