/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointAdmChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointAdmChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointAdmChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointAdmChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointAdmChannel.
func (mg *PinpointAdmChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointApnsChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointApnsChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointApnsChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointApnsChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointApnsChannel.
func (mg *PinpointApnsChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointApnsSandboxChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointApnsSandboxChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointApnsSandboxChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointApnsSandboxChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointApnsSandboxChannel.
func (mg *PinpointApnsSandboxChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointApnsVoipChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointApnsVoipChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointApnsVoipChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointApnsVoipChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointApnsVoipChannel.
func (mg *PinpointApnsVoipChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointApnsVoipSandboxChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointApnsVoipSandboxChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointApnsVoipSandboxChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointApnsVoipSandboxChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointApnsVoipSandboxChannel.
func (mg *PinpointApnsVoipSandboxChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointApp.
func (mg *PinpointApp) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointApp.
func (mg *PinpointApp) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointApp.
func (mg *PinpointApp) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointApp.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointApp) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointApp.
func (mg *PinpointApp) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointApp.
func (mg *PinpointApp) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointApp.
func (mg *PinpointApp) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointApp.
func (mg *PinpointApp) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointApp.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointApp) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointApp.
func (mg *PinpointApp) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointBaiduChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointBaiduChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointBaiduChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointBaiduChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointBaiduChannel.
func (mg *PinpointBaiduChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointEmailChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointEmailChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointEmailChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointEmailChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointEmailChannel.
func (mg *PinpointEmailChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointEventStream.
func (mg *PinpointEventStream) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointEventStream.
func (mg *PinpointEventStream) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointEventStream.
func (mg *PinpointEventStream) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointEventStream.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointEventStream) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointEventStream.
func (mg *PinpointEventStream) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointEventStream.
func (mg *PinpointEventStream) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointEventStream.
func (mg *PinpointEventStream) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointEventStream.
func (mg *PinpointEventStream) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointEventStream.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointEventStream) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointEventStream.
func (mg *PinpointEventStream) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointGcmChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointGcmChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointGcmChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointGcmChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointGcmChannel.
func (mg *PinpointGcmChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PinpointSmsChannel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PinpointSmsChannel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PinpointSmsChannel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PinpointSmsChannel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PinpointSmsChannel.
func (mg *PinpointSmsChannel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
