/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this SagemakerApp.
func (mg *SagemakerApp) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerApp.
func (mg *SagemakerApp) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerApp.
func (mg *SagemakerApp) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerApp.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerApp) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerApp.
func (mg *SagemakerApp) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerApp.
func (mg *SagemakerApp) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerApp.
func (mg *SagemakerApp) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerApp.
func (mg *SagemakerApp) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerApp.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerApp) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerApp.
func (mg *SagemakerApp) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerAppImageConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerAppImageConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerAppImageConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerAppImageConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerAppImageConfig.
func (mg *SagemakerAppImageConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerCodeRepository.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerCodeRepository) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerCodeRepository.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerCodeRepository) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerCodeRepository.
func (mg *SagemakerCodeRepository) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerDomain.
func (mg *SagemakerDomain) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerDomain.
func (mg *SagemakerDomain) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerDomain.
func (mg *SagemakerDomain) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerDomain.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerDomain) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerDomain.
func (mg *SagemakerDomain) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerDomain.
func (mg *SagemakerDomain) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerDomain.
func (mg *SagemakerDomain) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerDomain.
func (mg *SagemakerDomain) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerDomain.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerDomain) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerDomain.
func (mg *SagemakerDomain) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerEndpoint.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerEndpoint) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerEndpoint.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerEndpoint) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerEndpoint.
func (mg *SagemakerEndpoint) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerEndpointConfiguration.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerEndpointConfiguration) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerEndpointConfiguration.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerEndpointConfiguration) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerEndpointConfiguration.
func (mg *SagemakerEndpointConfiguration) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerFeatureGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerFeatureGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerFeatureGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerFeatureGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerFeatureGroup.
func (mg *SagemakerFeatureGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerImage.
func (mg *SagemakerImage) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerImage.
func (mg *SagemakerImage) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerImage.
func (mg *SagemakerImage) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerImage.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerImage) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerImage.
func (mg *SagemakerImage) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerImage.
func (mg *SagemakerImage) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerImage.
func (mg *SagemakerImage) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerImage.
func (mg *SagemakerImage) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerImage.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerImage) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerImage.
func (mg *SagemakerImage) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerImageVersion.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerImageVersion) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerImageVersion.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerImageVersion) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerImageVersion.
func (mg *SagemakerImageVersion) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerModel.
func (mg *SagemakerModel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerModel.
func (mg *SagemakerModel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerModel.
func (mg *SagemakerModel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerModel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerModel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerModel.
func (mg *SagemakerModel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerModel.
func (mg *SagemakerModel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerModel.
func (mg *SagemakerModel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerModel.
func (mg *SagemakerModel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerModel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerModel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerModel.
func (mg *SagemakerModel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerModelPackageGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerModelPackageGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerModelPackageGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerModelPackageGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerModelPackageGroup.
func (mg *SagemakerModelPackageGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerNotebookInstance.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerNotebookInstance) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerNotebookInstance.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerNotebookInstance) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerNotebookInstance.
func (mg *SagemakerNotebookInstance) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerNotebookInstanceLifecycleConfiguration.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerNotebookInstanceLifecycleConfiguration.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerNotebookInstanceLifecycleConfiguration.
func (mg *SagemakerNotebookInstanceLifecycleConfiguration) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerUserProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerUserProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerUserProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerUserProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerUserProfile.
func (mg *SagemakerUserProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerWorkforce.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerWorkforce) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerWorkforce.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerWorkforce) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerWorkforce.
func (mg *SagemakerWorkforce) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SagemakerWorkteam.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SagemakerWorkteam) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SagemakerWorkteam.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SagemakerWorkteam) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SagemakerWorkteam.
func (mg *SagemakerWorkteam) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
