/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this LambdaAlias.
func (mg *LambdaAlias) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaAlias.
func (mg *LambdaAlias) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaAlias.
func (mg *LambdaAlias) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaAlias.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaAlias) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaAlias.
func (mg *LambdaAlias) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaAlias.
func (mg *LambdaAlias) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaAlias.
func (mg *LambdaAlias) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaAlias.
func (mg *LambdaAlias) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaAlias.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaAlias) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaAlias.
func (mg *LambdaAlias) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaCodeSigningConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaCodeSigningConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaCodeSigningConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaCodeSigningConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaCodeSigningConfig.
func (mg *LambdaCodeSigningConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaEventSourceMapping.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaEventSourceMapping) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaEventSourceMapping.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaEventSourceMapping) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaEventSourceMapping.
func (mg *LambdaEventSourceMapping) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaFunction.
func (mg *LambdaFunction) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaFunction.
func (mg *LambdaFunction) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaFunction.
func (mg *LambdaFunction) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaFunction.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaFunction) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaFunction.
func (mg *LambdaFunction) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaFunction.
func (mg *LambdaFunction) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaFunction.
func (mg *LambdaFunction) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaFunction.
func (mg *LambdaFunction) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaFunction.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaFunction) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaFunction.
func (mg *LambdaFunction) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaFunctionEventInvokeConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaFunctionEventInvokeConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaFunctionEventInvokeConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaFunctionEventInvokeConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaFunctionEventInvokeConfig.
func (mg *LambdaFunctionEventInvokeConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaLayerVersion.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaLayerVersion) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaLayerVersion.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaLayerVersion) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaLayerVersion.
func (mg *LambdaLayerVersion) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaPermission.
func (mg *LambdaPermission) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaPermission.
func (mg *LambdaPermission) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaPermission.
func (mg *LambdaPermission) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaPermission.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaPermission) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaPermission.
func (mg *LambdaPermission) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaPermission.
func (mg *LambdaPermission) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaPermission.
func (mg *LambdaPermission) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaPermission.
func (mg *LambdaPermission) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaPermission.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaPermission) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaPermission.
func (mg *LambdaPermission) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this LambdaProvisionedConcurrencyConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *LambdaProvisionedConcurrencyConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this LambdaProvisionedConcurrencyConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *LambdaProvisionedConcurrencyConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this LambdaProvisionedConcurrencyConfig.
func (mg *LambdaProvisionedConcurrencyConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
